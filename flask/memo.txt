・サーバー公開モード
app.run(host='0.0.0.0')

・デバッグモード
app.debug = True
app.run もしくは
app.run(debug=True)

・末尾スラッシュの有無
有りの場合
  @app.route('/projects/')
  URL入力時にスラッシュを入れ忘れてもリダイレクトされる。

・無しの場合
  @app.route('/projects')
  スラッシュを入れ忘れるとNotFoundエラーとなる。

・動的URL組み込み
  @app.route('/user/<username>')
  def show_user_profile(username):
      # show the user profile for that user
      pass

  コンバータ使用の場合（int,float,passの３種類。自動で型変換する、ということか。)
  コンバータでint指定しないまま、post_idに対し四則演算などを行うとエラーになる。
  @app.route('/post/<int:post_id>')
  def show_post(post_id):
      # show the post with the given id, the id is an integer
      pass

・URL埋め込み
  url_for(メソッド名)
  url_for(メソッド名, next=URLパラメータ)    getメソッドのURLパラメータ
  url_for(メソッド名, username='John Doe')　第２引数以降は@app.routeデコレータで指定したパラメータ。
  
  これを使って動的にhtml(テンプレート)へurlを埋め込める。

・httpメソッド指定
@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        do_the_login()
    else:
        show_the_login_form()

・動的URL パラメータのカスタマイズ
BaseConverterというものをurl_map.convertersに自作して追加する。
デバックするとわかるが、url_mal.convertersには"int""path""string"というキーで
クラス（BaseConverterを親とする）が登録されている。

サンプルコード
//BaseConverterをインポート
from werkzeug.routing import BaseConverter

//小クラスを作成する。以下は正規表現を組み込んだConverterを作成している。
class RegexConverter(BaseConverter):
  def __init__(self, url_map, *items):
    super(RegexConverter, self).__init__(url_map)
    self.regex = items[0]
//自作Converterを登録
app.url_map.converters['regex'] = RegexConverte

情報源は以下サイト
http://dotnsf.blog.jp/archives/1071121590.html


・リクエスト参照方法
from flask import request
@app.route('/login', methods=['POST', 'GET'])
def login():
    error = None
    if request.method == 'POST':
        if valid_login(request.form['username'],    ←form以外のパラメータに渡された場合はどう取得する？ username,password is name elements
                       request.form['password']):    ←form以外のパラメータに渡された場合はどう取得する？
            return log_the_user_in(request.form['username'])
        else:
            error = 'Invalid username/password'
    # this is executed if the request method was GET or the
    # credentials were invalid

URL (?key=value)で提起されたパラメータにアクセスするには、 args 属性を使うことができます:
searchword = request.args.get('q', '')


add_url_rule(url,endpoint,viewfunc)

.howto return response of json object
from flask import jsonify
def loadMusics(numAlbum):
    items = __getMusicsInAlbum(numAlbum)
    return jsonify(items)

